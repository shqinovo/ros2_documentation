# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:8
msgid "Using stamped datatypes with ``tf2_ros::MessageFilter``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:10
msgid ""
"**Goal:** Learn how to use ``tf2_ros::MessageFilter`` to process stamped "
"datatypes."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:12
msgid "**Tutorial level:** Intermediate"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:14
msgid "**Time:** 10 minutes"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:18
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:21
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:23
msgid ""
"This tutorial explains how to use sensor data with tf2. Some real-world "
"examples of sensor data are:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:26
msgid "cameras, both mono and stereo"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:28
msgid "laser scans"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:30
msgid ""
"Suppose that a new turtle named ``turtle3`` is created and it doesn't "
"have good odometry, but there is an overhead camera tracking its position"
" and publishing it as a ``PointStamped`` message in relation to the "
"``world`` frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:32
msgid "``turtle1`` wants to know where ``turtle3`` is compared to itself."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:34
msgid ""
"To do this ``turtle1`` must listen to the topic where ``turtle3``'s pose "
"is being published, wait until transforms into the desired frame are "
"ready, and then do its operations. To make this easier the "
"``tf2_ros::MessageFilter`` is very useful. The ``tf2_ros::MessageFilter``"
" will take a subscription to any ROS 2 message with a header and cache it"
" until it is possible to transform it into the target frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:39
msgid "Tasks"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:42
msgid "1 Write the broadcaster node of PointStamped messages"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:44
msgid ""
"For this tutorial we will set up a demo application which has a node (in "
"Python) to broadcast the ``PointStamped`` position messages of "
"``turtle3``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:46
msgid "First, let's create the source file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:48
msgid ""
"Go to the ``learning_tf2_py`` :doc:`package <./Writing-A-Tf2-Static-"
"Broadcaster-Py>` we created in the previous tutorial. Inside the "
"``src/learning_tf2_py/learning_tf2_py`` directory download the example "
"sensor message broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:53
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:278
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:296
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:325
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:598
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:616
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:638
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:59
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:284
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:302
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:331
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:604
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:622
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:644
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:65
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:288
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:308
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:337
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:608
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:628
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:650
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:67
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:339
msgid "In a Windows command line prompt:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:73
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:345
msgid "Or in powershell:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:79
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:351
msgid "Open the file using your preferred text editor."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:169
msgid "1.1 Examine the code"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:171
msgid ""
"Now let's take a look at the code. First, in the ``on_timer`` callback "
"function, we spawn the ``turtle3`` by asynchronously calling the "
"``Spawn`` service of ``turtlesim``, and initialize its position at (4, 2,"
" 0), when the turtle spawning service is ready."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:186
msgid ""
"Afterward, the node publishes the topic ``turtle3/cmd_vel``, topic "
"``turtle3/turtle_point_stamped``, and subscribes to topic "
"``turtle3/pose`` and runs callback function ``handle_turtle_pose`` on "
"every incoming message."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:194
msgid ""
"Finally, in the callback function ``handle_turtle_pose``, we initialize "
"the ``Twist`` messages of ``turtle3`` and publish them, which will make "
"the ``turtle3`` move along a circle. Then we fill up the ``PointStamped``"
" messages of ``turtle3`` with incoming ``Pose`` messages and publish "
"them."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:213
msgid "1.2 Write the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:215
msgid ""
"In order to run this demo, we need to create a launch file "
"``turtle_tf2_sensor_message_launch.py`` in the ``launch`` subdirectory of"
" package ``learning_tf2_py``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:261
msgid "1.3 Add an entry point"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:263
msgid ""
"To allow the ``ros2 run`` command to run your node, you must add the "
"entry point to ``setup.py`` (located in the ``src/learning_tf2_py`` "
"directory)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:265
msgid "Add the following line between the ``'console_scripts':`` brackets:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:272
msgid "1.4 Build"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:274
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:594
msgid ""
"Run ``rosdep`` in the root of your workspace to check for missing "
"dependencies."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:286
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:290
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:606
#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:610
msgid ""
"rosdep only runs on Linux, so you will need to install ``geometry_msgs`` "
"and ``turtlesim`` dependencies yourself"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:292
msgid "And then we can build the package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:316
msgid "2 Writing the message filter/listener node"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:318
msgid ""
"Now, to get the streaming ``PointStamped`` data of ``turtle3`` in the "
"frame of ``turtle1`` reliably, we will create the source file of the "
"message filter/listener node."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:320
msgid ""
"Go to the ``learning_tf2_cpp`` :doc:`package <./Writing-A-Tf2-Static-"
"Broadcaster-Cpp>` we created in the previous tutorial. Inside the "
"``src/learning_tf2_cpp/src`` directory download file "
"``turtle_tf2_message_filter.cpp`` by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:438
msgid "2.1 Examine the code"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:440
msgid ""
"First, you must include the ``tf2_ros::MessageFilter`` headers from the "
"``tf2_ros`` package, as well as the previously used ``tf2`` and ``ros2`` "
"related headers."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:458
msgid ""
"Second, there needs to be persistent instances of ``tf2_ros::Buffer``, "
"``tf2_ros::TransformListener`` and ``tf2_ros::MessageFilter``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:469
msgid ""
"Third, the ROS 2 ``message_filters::Subscriber`` must be initialized with"
" the topic. And the ``tf2_ros::MessageFilter`` must be initialized with "
"that ``Subscriber`` object. The other arguments of note in the "
"``MessageFilter`` constructor are the ``target_frame`` and the callback "
"function. The target frame is the frame into which it will make sure "
"``canTransform`` will succeed. And the callback function is the function "
"that will be called when the data is ready."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:504
msgid ""
"And last, the callback method will call ``tf2_buffer_->transform`` when "
"the data is ready and print output to the console."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:528
msgid "2.2 Add dependencies"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:530
msgid ""
"Before building the package ``learning_tf2_cpp``, please add two another "
"dependencies in the ``package.xml`` file of this package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:538
msgid "2.3 CMakeLists.txt"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:540
msgid ""
"And in the ``CMakeLists.txt`` file, add two lines below the existing "
"dependencies:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:547
msgid "The lines below will deal with differences between ROS distributions:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:564
msgid ""
"After that, add the executable and name it ``turtle_tf2_message_filter``,"
" which you'll use later with ``ros2 run``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:583
msgid ""
"Finally, add the ``install(TARGETS…)`` section (below other existing "
"nodes) so ``ros2 run`` can find your executable:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:592
msgid "2.4 Build"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:612
msgid ""
"Now open a new terminal, navigate to the root of your workspace, and "
"rebuild the package with command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:634
msgid ""
"Open a new terminal, navigate to the root of your workspace, and source "
"the setup files:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:661
msgid "3 Run"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:663
msgid ""
"First we need to run several nodes (including the broadcaster node of "
"PointStamped messages) by launching the launch file "
"``turtle_tf2_sensor_message_launch.py``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:669
msgid ""
"This will bring up the ``turtlesim`` window with two turtles, where "
"``turtle3`` is moving along a circle, while ``turtle1`` isn't moving at "
"first. But you can run the ``turtle_teleop_key`` node in another terminal"
" to drive ``turtle1`` to move:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:678
msgid "Now if you echo the topic ``turtle3/turtle_point_stamped``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:684
msgid "Then there will be output like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:719
msgid ""
"When the demo is running, open another terminal and run the message "
"filter/listener node:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:725
msgid "If it's running correctly you should see streaming data like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:739
msgid "Summary"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Using-Stamped-Datatypes-With-Tf2-Ros-MessageFilter.rst:741
msgid ""
"In this tutorial you learned how to use sensor data/messages in tf2. "
"Specifically speaking, you learned how to publish ``PointStamped`` "
"messages on a topic, and how to listen to the topic and transform the "
"frame of ``PointStamped`` messages with ``tf2_ros::MessageFilter``."
msgstr ""

