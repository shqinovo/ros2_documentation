# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:6
msgid "Creating and using plugins (C++)"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:8
msgid "**Goal:** Learn to create and load a simple plugin using ``pluginlib``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:10
msgid "**Tutorial level:** Beginner"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:12
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:16
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:19
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:21
msgid ""
"This tutorial is derived from `<http://wiki.ros.org/pluginlib>`_ and "
"`Writing and Using a Simple Plugin Tutorial "
"<http://wiki.ros.org/pluginlib/Tutorials/Writing%20and%20Using%20a%20Simple%20Plugin>`_."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:23
msgid ""
"``pluginlib`` is a C++ library for loading and unloading plugins from "
"within a ROS package. Plugins are dynamically loadable classes that are "
"loaded from a runtime library (i.e. shared object, dynamically linked "
"library). With pluginlib, you do not have to explicitly link your "
"application against the library containing the classes -- instead "
"``pluginlib`` can open a library containing exported classes at any point"
" without the application having any prior awareness of the library or the"
" header file containing the class definition. Plugins are useful for "
"extending/modifying application behavior without needing the application "
"source code."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:29
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:31
msgid ""
"This tutorial assumes basic C++ knowledge and that you have successfully "
":doc:`installed ROS 2 <../../Installation>`."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:34
msgid "Tasks"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:36
msgid ""
"In this tutorial, you will create two new packages, one that defines the "
"base class, and another that provides the plugins. The base class will "
"define a generic polygon class, and then our plugins will define specific"
" shapes."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:40
msgid "1 Create the Base Class Package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:42
msgid ""
"Create a new empty package in your ``ros2_ws/src`` folder with the "
"following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:49
msgid ""
"Open your favorite editor, edit "
"``ros2_ws/src/polygon_base/include/polygon_base/regular_polygon.hpp``, "
"and paste the following inside of it:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:72
msgid ""
"The code above creates an abstract class called ``RegularPolygon``. One "
"thing to notice is the presence of the initialize method. With "
"``pluginlib``, a constructor without parameters is required, so if any "
"parameters to the class are needed, we use the initialize method to pass "
"them to the object."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:76
msgid ""
"We need to make this header available to other classes, so open "
"``ros2_ws/src/polygon_base/CMakeLists.txt`` for editing. Add the "
"following lines after the ``ament_target_dependencies`` command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:86
msgid "And add this command before the ``ament_package`` command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:94
msgid "We will return to this package later to write our test node."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:97
msgid "2 Create the Plugin Package"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:99
msgid ""
"Now we're going to write two non-virtual implementations of our abstract "
"class. Create a second empty package in your ``ros2_ws/src`` folder with "
"the following command:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:107
msgid "2.1 Source code for the plugins"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:109
msgid ""
"Open ``ros2_ws/src/polygon_plugins/src/polygon_plugins.cpp`` for editing,"
" and paste the following inside of it:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:163
msgid ""
"The implementation of the Square and Triangle classes is fairly "
"straightforward: save the side length, and use it to calculate the area. "
"The only piece that is pluginlib specific is the last three lines, which "
"invokes some magical macros that register the classes as actual plugins. "
"Let's go through the arguments to the ``PLUGINLIB_EXPORT_CLASS`` macro:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:167
msgid ""
"The fully-qualified type of the plugin class, in this case, "
"``polygon_plugins::Square``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:168
msgid ""
"The fully-qualified type of the base class, in this case, "
"``polygon_base::RegularPolygon``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:171
msgid "2.2 Plugin Declaration XML"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:173
msgid ""
"The steps above enable plugin instances to be created when the containing"
" library is loaded, but the plugin loader still needs a way to find that "
"library and to know what to reference within that library. To this end, "
"we'll also create an XML file that, along with a special export line in "
"the package manifest, makes all the necessary information about our "
"plugins available to the ROS toolchain."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:176
msgid ""
"Create ``ros2_ws/src/polygon_plugins/plugins.xml`` with the following "
"code:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:189
msgid "A couple things to note:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:191
msgid ""
"The ``library`` tag gives the relative path to a library that contains "
"the plugins that we want to export. In ROS 2, that is just the name of "
"the library. In ROS 1, it contained the prefix ``lib`` or sometimes "
"``lib/lib`` (i.e. ``lib/libpolygon_plugins``), but here it is simpler."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:193
msgid ""
"The ``class`` tag declares a plugin that we want to export from our "
"library. Let's go through its parameters:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:196
msgid ""
"``type``: The fully qualified type of the plugin. For us, that's "
"``polygon_plugins::Square``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:197
msgid ""
"``base_class``: The fully qualified base class type for the plugin. For "
"us, that's ``polygon_base::RegularPolygon``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:198
msgid "``description``: A description of the plugin and what it does."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:201
msgid "2.3 CMake Plugin Declaration"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:203
msgid ""
"The last step is to export your plugins via ``CMakeLists.txt``. This is a"
" change from ROS 1, where the exporting was done via ``package.xml``. Add"
" the following line to your "
"``ros2_ws/src/polygon_plugins/CMakeLists.txt`` after the line reading "
"``find_package(pluginlib REQUIRED)``:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:211
msgid ""
"The arguments to the ``pluginlib_export_plugin_description_file`` command"
" are:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:213
msgid "The package with the base class, i.e. ``polygon_base``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:214
msgid "The relative path to the Plugin Declaration xml, i.e. ``plugins.xml``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:217
msgid "3 Use the Plugins"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:219
msgid ""
"Now it's time to use the plugins. This can be done in any package, but "
"here we're going to do it in the base package. Edit "
"``ros2_ws/src/polygon_base/src/area_node.cpp`` to contain the following:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:255
msgid ""
"The ``ClassLoader`` is the key class to understand, defined in the "
"``class_loader.hpp`` `header file "
"<https://github.com/ros/pluginlib/blob/ros2/pluginlib/include/pluginlib/class_loader.hpp>`_:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:257
msgid ""
"It is templated with the base class, i.e. "
"``polygon_base::RegularPolygon``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:258
msgid ""
"The first argument is a string for the package name of the base class, "
"i.e. ``polygon_base``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:259
msgid ""
"The second argument is a string with the fully qualified base class type "
"for the plugin, i.e. ``polygon_base::RegularPolygon``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:261
msgid ""
"There are a number of ways to instantiate an instance of the class. In "
"this example, we're using shared pointers. We just need to call "
"``createSharedInstance`` with the fully-qualified type of the plugin "
"class, in this case, ``polygon_plugins::Square``."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:265
msgid ""
"Important note: the ``polygon_base`` package in which this node is "
"defined does NOT depend on the ``polygon_plugins`` class. The plugins "
"will be loaded dynamically without any dependency needing to be declared."
" Furthermore, we're instantiating the classes with hardcoded plugin "
"names, but you can also do so dynamically with parameters, etc."
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:270
msgid "4 Build and run"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:272
msgid ""
"Navigate back to the root of your workspace, ``ros2_ws``, and build your "
"new packages:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:278
msgid "From ``ros2_ws``, be sure to source the setup files:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:282
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:288
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:294
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:300
msgid "Now run the node:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:306
msgid "It should print:"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:314
msgid "Summary"
msgstr ""

#: ../../source/Tutorials/Beginner-Client-Libraries/Pluginlib.rst:316
msgid "Congratulations! You've just written and used your first plugins."
msgstr ""

