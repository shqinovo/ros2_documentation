# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:8
msgid "Understanding services"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:10
msgid "**Goal:** Learn about services in ROS 2 using command line tools."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:12
msgid "**Tutorial level:** Beginner"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:14
msgid "**Time:** 10 minutes"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:18
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:21
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:23
msgid ""
"Services are another method of communication for nodes in the ROS graph. "
"Services are based on a call-and-response model versus the publisher-"
"subscriber model of topics. While topics allow nodes to subscribe to data"
" streams and get continual updates, services only provide data when they "
"are specifically called by a client."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:32
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:34
msgid ""
"Some concepts mentioned in this tutorial, like :doc:`Nodes "
"<../Understanding-ROS2-Nodes/Understanding-ROS2-Nodes>` and :doc:`Topics "
"<../Understanding-ROS2-Topics/Understanding-ROS2-Topics>`, were covered "
"in previous tutorials in the series."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:36
msgid ""
"You will need the :doc:`turtlesim package <../Introducing-Turtlesim"
"/Introducing-Turtlesim>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:38
msgid ""
"As always, don't forget to source ROS 2 in :doc:`every new terminal you "
"open <../Configuring-ROS2-Environment>`."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:41
msgid "Tasks"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:44
msgid "1 Setup"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:45
msgid "Start up the two turtlesim nodes, ``/turtlesim`` and ``/teleop_turtle``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:47
msgid "Open a new terminal and run:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:53
msgid "Open another terminal and run:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:60
msgid "2 ros2 service list"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:62
msgid ""
"Running the ``ros2 service list`` command in a new terminal will return a"
" list of all the services currently active in the system:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:86
msgid ""
"You will see that both nodes have the same six services with "
"``parameters`` in their names. Nearly every node in ROS 2 has these "
"infrastructure services that parameters are built off of. There will be "
"more about parameters in the next tutorial. In this tutorial, the "
"parameter services will be omitted from the discussion."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:91
msgid ""
"For now, let's focus on the turtlesim-specific services, ``/clear``, "
"``/kill``, ``/reset``, ``/spawn``, ``/turtle1/set_pen``, "
"``/turtle1/teleport_absolute``, and ``/turtle1/teleport_relative``. You "
"may recall interacting with some of these services using rqt in the "
":doc:`Use turtlesim, ros2, and rqt <../Introducing-Turtlesim/Introducing-"
"Turtlesim>` tutorial."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:96
msgid "3 ros2 service type"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:98
msgid ""
"Services have types that describe how the request and response data of a "
"service is structured. Service types are defined similarly to topic "
"types, except service types have two parts: one message for the request "
"and another for the response."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:101
msgid "To find out the type of a service, use the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:107
msgid ""
"Let's take a look at turtlesim's ``/clear`` service. In a new terminal, "
"enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:114
msgid "Which should return:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:120
msgid ""
"The ``Empty`` type means the service call sends no data when making a "
"request and receives no data when receiving a response."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:123
msgid "3.1 ros2 service list -t"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:125
msgid ""
"To see the types of all the active services at the same time, you can "
"append the ``--show-types`` option, abbreviated as ``-t``, to the "
"``list`` command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:131
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:160
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:182
#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:201
msgid "Which will return:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:146
msgid "4 ros2 service find"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:148
msgid ""
"If you want to find all the services of a specific type, you can use the "
"command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:154
msgid "For example, you can find all the ``Empty`` typed services like this:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:168
msgid "5 ros2 interface show"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:170
msgid ""
"You can call services from the command line, but first you need to know "
"the structure of the input arguments."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:176
msgid "Try this on the ``/clear`` service's type, ``Empty``:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:188
msgid ""
"The ``---`` separates the request structure (above) from the response "
"structure (below). But, as you learned earlier, the ``Empty`` type "
"doesn't send or receive any data. So, naturally, its structure is blank."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:192
msgid ""
"Let's introspect a service with a type that sends and receives data, like"
" ``/spawn``. From the results of ``ros2 service list -t``, we know "
"``/spawn``'s type is ``turtlesim/srv/Spawn``."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:195
msgid ""
"To see the request and response arguments of the ``/spawn`` service, run "
"the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:212
msgid ""
"The information above the ``---`` line tells us the arguments needed to "
"call ``/spawn``. ``x``, ``y`` and ``theta`` determine the 2D pose of the "
"spawned turtle, and ``name`` is clearly optional."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:215
msgid ""
"The information below the line isn't something you need to know in this "
"case, but it can help you understand the data type of the response you "
"get from the call."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:218
msgid "6 ros2 service call"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:220
msgid ""
"Now that you know what a service type is, how to find a service's type, "
"and how to find the structure of that type's arguments, you can call a "
"service using:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:226
msgid ""
"The ``<arguments>`` part is optional. For example, you know that "
"``Empty`` typed services don't have any arguments:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:233
msgid ""
"This command will clear the turtlesim window of any lines your turtle has"
" drawn."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:237
msgid ""
"Now let's spawn a new turtle by calling ``/spawn`` and setting arguments."
" Input ``<arguments>`` in a service call from the command-line need to be"
" in YAML syntax."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:240
msgid "Enter the command:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:246
msgid ""
"You will get this method-style view of what's happening, and then the "
"service response:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:255
msgid ""
"Your turtlesim window will update with the newly spawned turtle right "
"away:"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:260
msgid "Summary"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:262
msgid ""
"Nodes can communicate using services in ROS 2. Unlike a topic - a one way"
" communication pattern where a node publishes information that can be "
"consumed by one or more subscribers - a service is a request/response "
"pattern where a client makes a request to a node providing the service "
"and the service processes the request and generates a response."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:265
msgid ""
"You generally don't want to use a service for continuous calls; topics or"
" even actions would be better suited."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:267
msgid ""
"In this tutorial you used command line tools to identify, introspect, and"
" call services."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:270
msgid "Next steps"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:272
msgid ""
"In the next tutorial, :doc:`../Understanding-ROS2-Parameters"
"/Understanding-ROS2-Parameters`, you will learn about configuring node "
"settings."
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:275
msgid "Related content"
msgstr ""

#: ../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:277
msgid ""
"Check out `this tutorial <https://discourse.ubuntu.com/t/call-services-"
"in-ros-2/15261>`_; it's an excellent realistic application of ROS "
"services using a Robotis robot arm."
msgstr ""

