# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:7
msgid "Unlocking the potential of Fast DDS middleware [community-contributed]"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:9
msgid ""
"**Goal:** This tutorial will show how to use the extended configuration "
"capabilities of Fast DDS in ROS 2."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:11
msgid "**Tutorial level:** Advanced"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:13
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:17
msgid "Table of Contents"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:20
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:22
msgid ""
"The interface between the ROS 2 stack and *Fast DDS* is provided by the "
"ROS 2 middleware implementation `rmw_fastrtps "
"<https://github.com/ros2/rmw_fastrtps>`_. This implementation is "
"available in all ROS 2 distributions, both from binaries and from "
"sources."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:25
msgid ""
"ROS 2 RMW only allows for the configuration of certain middleware QoS "
"(see :doc:`ROS 2 QoS policies <../../Concepts/Intermediate/About-Quality-"
"of-Service-Settings>`). However, ``rmw_fastrtps`` offers extended "
"configuration capabilities to take full advantage of the features in "
"*Fast DDS*. This tutorial will guide you through a series of examples "
"explaining how to use XML files to unlock this extended configuration."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:30
msgid ""
"In order to get more information about using *Fast DDS* on ROS 2, please "
"check the `following documentation <https://fast-"
"dds.docs.eprosima.com/en/latest/fastdds/ros2/ros2.html>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:34
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:36
msgid ""
"This tutorial assumes that you know how to :doc:`create a package "
"<../Beginner-Client-Libraries/Creating-Your-First-ROS2-Package>`. It also"
" assumes you know how to write a :doc:`simple publisher and subscriber"
"<../Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-"
"Subscriber>` and a :doc:`simple service and client <../Beginner-Client-"
"Libraries/Writing-A-Simple-Cpp-Service-And-Client>`. Although the "
"examples are implemented in C++, the same concepts apply to Python "
"packages."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:42
msgid "Mixing synchronous and asynchronous publications in the same node"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:44
msgid ""
"In this first example, a node with two publishers, one of them with "
"synchronous publication mode and the other one with asynchronous "
"publication mode, will be created."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:46
msgid "``rmw_fastrtps`` uses synchronous publication mode by default."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:48
msgid ""
"With synchronous publication mode the data is sent directly within the "
"context of the user thread. This entails that any blocking call occurring"
" during the write operation would block the user thread, thus preventing "
"the application from continuing its operation. However, this mode "
"typically yields higher throughput rates at lower latencies, since there "
"is no notification nor context switching between threads."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:52
msgid ""
"On the other hand, with asynchronous publication mode, each time the "
"publisher invokes the write operation, the data is copied into a queue, a"
" background thread (asynchronous thread) is notified about the addition "
"to the queue, and control of the thread is returned to the user before "
"the data is actually sent. The background thread is in charge of "
"consuming the queue and sending the data to every matched reader."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:57
msgid "Create the node with the publishers"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:59
msgid ""
"First, create a new package named ``sync_async_node_example_cpp`` on a "
"new workspace:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:63
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:272
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:396
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:772
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:71
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:280
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:404
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:780
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:79
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:288
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:412
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:788
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:88
msgid ""
"Then, add a file named ``src/sync_async_writer.cpp`` to the package, with"
" the following content. Note that the synchronous publisher will be "
"publishing on topic ``sync_topic``, while the asynchronous one will be "
"publishing on topic ``async_topic``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:171
msgid ""
"Now open the ``CMakeLists.txt`` file and add a new executable and name it"
" ``SyncAsyncWriter`` so you can run your node using ``ros2 run``:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:178
msgid ""
"Finally, add the ``install(TARGETSâ€¦)`` section so ``ros2 run`` can find "
"your executable:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:186
msgid ""
"You can clean up your ``CMakeLists.txt`` by removing some unnecessary "
"sections and comments, so it looks like this:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:215
msgid ""
"If this node is built and run now, both publishers will behave the same, "
"publishing asynchronously in both topics, because this is the default "
"publication mode. The default publication mode configuration can be "
"changed in runtime during the node launching, using an XML file."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:219
msgid "Create the XML file with the profile configuration"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:221
msgid "Create a file with name ``SyncAsync.xml`` and the following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:260
msgid ""
"Note that several profiles for publisher and subscriber are defined. Two "
"default profiles which are defined setting the ``is_default_profile`` to "
"``true``, and two profiles with names that coincide with those of the "
"previously defined topics: ``sync_topic`` and another one for "
"``async_topic``. These last two profiles set the publication mode to "
"``SYNCHRONOUS`` or ``ASYNCHRONOUS`` accordingly. Note also that all "
"profiles specify a ``historyMemoryPolicy`` value, which is needed for the"
" example to work, and the reason will be explained later on this "
"tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:266
msgid "Execute the publisher node"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:268
msgid ""
"You will need to export the following environment variables for the XML "
"to be loaded:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:296
#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:420
msgid "Finally, ensure you have sourced your setup files and run the node:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:303
msgid ""
"You should see the publishers sending the data from the publishing node, "
"like so:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:314
msgid ""
"Now you have a synchronous publisher and an asynchronous publisher "
"running inside the same node."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:318
msgid "Create a node with the subscribers"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:320
msgid ""
"Next, a new node with the subscribers that will listen to the "
"``sync_topic`` and ``async_topic`` publications is going to be created. "
"In a new source file named ``src/sync_async_reader.cpp`` write the "
"following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:377
msgid ""
"Open the ``CMakeLists.txt`` file and add a new executable and name it "
"``SyncAsyncReader`` under the previous ``SyncAsyncWriter``:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:390
msgid "Execute the subscriber node"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:392
msgid ""
"With the publisher node running in one terminal, open another one and "
"export the required environment variables for the XML to be loaded:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:427
msgid ""
"You should see the subscribers receiving the data from the publishing "
"node, like so:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:440
msgid "Analysis of the example"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:443
msgid "Configuration profiles XML"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:445
msgid ""
"The XML file defines several configurations for publishers and "
"subscribers. You can have a default publisher configuration profile and "
"several topic-specific publisher profiles. The only requirement is that "
"all publisher profiles have a different name and that there is only a "
"single default profile. The same goes for subscribers."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:450
msgid ""
"In order to define a configuration for a specific topic, just name the "
"profile after the the ROS 2 topic name (like ``/sync_topic`` and "
"``/async_topic`` in the example), and ``rmw_fastrtps`` will apply this "
"profile to all publishers and subscribers for that topic. The default "
"configuration profile is identified by the attribute "
"``is_default_profile`` set to ``true``, and acts as a fallback profile "
"when there is no other one with a name matching the topic name."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:454
msgid ""
"The environment variable ``FASTRTPS_DEFAULT_PROFILES_FILE`` is used to "
"inform *Fast DDS* the path to the XML file with the configuration "
"profiles to load."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:457
msgid "RMW_FASTRTPS_USE_QOS_FROM_XML"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:459
msgid ""
"Among all the configurable attributes, ``rmw_fastrtps`` treats "
"``publishMode`` and ``historyMemoryPolicy`` differently. By default, "
"these values are set to ``ASYNCHRONOUS`` and "
"``PREALLOCATED_WITH_REALLOC`` within the ``rmw_fastrtps`` implementation,"
" and the values set on the XML file are ignored. In order to use the "
"values in the XML file, the environment variable "
"``RMW_FASTRTPS_USE_QOS_FROM_XML`` must be set to ``1``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:463
msgid ""
"However, this entails **another caveat**: If "
"``RMW_FASTRTPS_USE_QOS_FROM_XML`` is set, but the XML file does not "
"define ``publishMode`` or ``historyMemoryPolicy``, these attributes take "
"the *Fast DDS* default value instead of the ``rmw_fastrtps`` default "
"value. This is important, especially for ``historyMemoryPolicy``, because"
" the *Fast DDS* deafult value is ``PREALLOCATED`` which does not work "
"with ROS2 topic data types. Therefore, in the example, a valid value for "
"this policy has been explicitly set (``DYNAMIC``)."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:470
msgid "Prioritization of rmw_qos_profile_t"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:472
msgid ""
"ROS 2 QoS contained in `rmw_qos_profile_t "
"<http://docs.ros2.org/latest/api/rmw/structrmw__qos__profile__t.html>`_ "
"are always honored, unless set to ``*_SYSTEM_DEFAULT``. In that case, XML"
" values (or *Fast DDS* default values in the absence of XML ones) are "
"applied. This means that if any QoS in ``rmw_qos_profile_t`` is set to "
"something other than ``*_SYSTEM_DEFAULT``, the corresponding value in the"
" XML is ignored."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:478
msgid "Using other FastDDS capabilities with XML"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:480
msgid ""
"Although we have created a node with two publishers with different "
"configuration, it is not easy to check that they are behaving "
"differently. Now that the basics of XML profiles have been covered, let "
"us use them to configure something which has some visual effect on the "
"nodes. Specifically, a maximum number of matching subscribers on one of "
"the publishers and a partition definition on the other will be set. Note "
"that these are only very simple examples among all the configuration "
"attributes that can be tuned on ``rmw_fastrtps`` through XML files. "
"Please refer to `*Fast DDS* documentation <https://fast-"
"dds.docs.eprosima.com/en/latest/fastdds/xml_configuration/xml_configuration.html"
"#xml-profiles>`__ to  see the whole list of attributes that can be "
"configured through XML files."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:487
msgid "Limiting the number of matching subscribers"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:489
msgid ""
"Add a maximum number of matched subscribers to the ``/async_topic`` "
"publisher profile. It should look like this:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:509
msgid "The number of matching subscribers is being limited to one."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:511
msgid ""
"Now open three terminals and do not forget to source the setup files and "
"to set the required environment variables. On the first terminal run the "
"publisher node, and the subscriber node on the other two. You should see "
"that only the first subscriber node receives the messages from both "
"topics. The second one could not complete the matching process in the "
"``/async_topic`` because the publisher prevented it, as it had already "
"reached its maximum of matched publishers. Consequently, only the "
"messages from the ``/sync_topic`` are going to be received in this third "
"terminal:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:525
msgid "Using partitions within the topic"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:527
msgid ""
"The partitions feature can be used to control which publishers and "
"subscribers exchange information within the same topic."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:529
msgid ""
"Partitions introduce a logical entity isolation level concept inside the "
"physical isolation induced by a Domain ID. For a publisher to communicate"
" with a subscriber, they have to belong at least to one common partition."
" Partitions represent another level to separate publishers and "
"subscribers beyond domain and topic. Unlike domain and topic, an endpoint"
" can belong to several partitions at the same time. For certain data to "
"be shared over different domains or topics, there must be a different "
"publisher for each, sharing its own history of changes. However, a single"
" publisher can share the same data sample over different partitions using"
" a single topic data change, thus reducing network overload."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:536
msgid ""
"Let us change the ``/sync_topic`` publisher to partition ``part1`` and "
"create a new ``/sync_topic`` subscriber which uses partition ``part2``. "
"Their profiles should now look like this:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:568
msgid ""
"Open two terminals. Do not forget to source the setup files and to set "
"the required environment variables. On the first terminal run the "
"publisher node, and the subscriber node on the other one. You should see "
"that only the ``/async_topic`` messages are reaching the subscriber. The "
"``/sync_topic`` subscriber is not receiving the data as it is in a "
"different partition from the corresponding publisher."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:582
msgid "Configuring a service and a client"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:584
msgid ""
"Services and clients have a publisher and a subscriber each, that "
"communicate through two different topics. For example, for a service "
"named ``ping`` there is:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:587
msgid "A service subscriber listening to requests on ``/rq/ping``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:588
msgid "A service publisher sending responses on ``/rr/ping``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:589
msgid "A client publisher sending requests on ``/rq/ping``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:590
msgid "A client subscriber listening to responses on ``/rr/ping``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:592
msgid ""
"Although you can use these topic names to set the configuration profiles "
"on the XML, sometimes you may wish to apply the same profile to all "
"services or clients on a node. Instead of copying the same profile with "
"all topic names generated for all services, you can just create a "
"publisher and subscriber profile pair named ``service``. The same can be "
"done for clients creating a pair named ``client``."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:598
msgid "Create the nodes with the service and client"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:600
msgid ""
"Start creating the node with the service. Add a new source file named "
"``src/ping_service.cpp`` on your package with the following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:644
msgid ""
"Create the client in a file named ``src/ping_client.cpp`` with the "
"following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:694
msgid ""
"Open the ``CMakeLists.txt`` file and add two new executables "
"``ping_service`` and ``ping_client``:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:714
msgid "Finally, build the package."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:718
msgid "Create the XML profiles for the service and client"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:720
msgid "Create a file with name ``ping.xml`` with the following content:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:760
msgid ""
"This configuration file sets the publication mode to ``SYNCHRONOUS`` on "
"the service and to ``ASYNCHRONOUS`` on the client. Note that we are only "
"defining the publisher profiles for both the service and the client, but "
"subscriber profiles could be provided too."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:765
msgid "Execute the nodes"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:767
msgid ""
"Open two terminals and source the setup files on each one. Then set the "
"required environment variables for the XML to be loaded:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:797
msgid "On the first terminal run the service node."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:803
msgid "You should see the service waiting for requests:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:809
msgid "On the second terminal, run the client node."
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:816
msgid "You should see the client sending the request and receiving the response:"
msgstr ""

#: ../../source/Tutorials/Advanced/FastDDS-Configuration.rst:823
msgid "At the same time, the output in the server console has been updated:"
msgstr ""

