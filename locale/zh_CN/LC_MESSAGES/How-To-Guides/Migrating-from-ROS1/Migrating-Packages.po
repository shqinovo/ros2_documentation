# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:2
msgid "Migrating Packages"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:6
msgid "Table of Contents"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:8
msgid "There are two different kinds of package migrations:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:10
msgid ""
"Migrating the source code of an existing package from ROS 1 to ROS 2 with"
" the intent that a significant part of the source code will stay the same"
" or at least similar. An example for this is `pluginlib "
"<https://github.com/ros/pluginlib>`_ where the source code is maintained "
"in different branches within the same repository and common patches can "
"be ported between those branches when necessary."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:12
msgid ""
"Implementing the same or similar functionality of a ROS 1 package for ROS"
" 2 but with the assumption that the source code will be significantly "
"different. An example for this is `roscpp "
"<https://github.com/ros/ros_comm/tree/melodic-devel/clients/roscpp>`_ in "
"ROS 1 and `rclcpp <https://github.com/ros2/rclcpp/tree/rolling/rclcpp>`_ "
"in ROS 2 which are separate repositories and don't share any code."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:16
msgid "Prerequisites"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:18
msgid ""
"Before being able to migrate a ROS 1 package to ROS 2 all of its "
"dependencies must be available in ROS 2."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:21
msgid "Package format version"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:23
msgid ""
"ROS 2 doesn't support format 1 of the package specification but only "
"newer format versions (2 and higher). Therefore the ``package.xml`` file "
"must be updated to at least format 2 if it uses format 1. Since ROS 1 "
"supports all formats it is safe to perform that conversion in the ROS 1 "
"package."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:28
msgid "Migrating from package format 1 to 2+"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:30
msgid ""
"The differences between format 1 and format 2 only affect the package.xml"
" with its dependencies. `REP-0140 "
"<https://www.ros.org/reps/rep-0140.html>`__ defines these differences and"
" provides their rationale."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:33
msgid ""
"See :doc:`the rosdep documentation <../../Tutorials/Intermediate/Rosdep>`"
" for more information about the various tags."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:36
msgid "**<package>**"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:38
msgid "The <package> tag determines which format to use, change it like this:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:45
msgid "**<depend>**"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:47
msgid ""
"This is a new tag, intended to reduce unnecessary repetition. If your "
"format 1 package contained:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:55
msgid "It should be replaced with:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:61
msgid "In format 2, that is equivalent to:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:71
msgid "**<run_depend>**"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:73
msgid "This tag is no longer allowed. Wherever found, it must be replaced:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:80
msgid "In format 2, that is equivalent to these two new tags:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:87
msgid ""
"If the dependency is only used at run-time, only the ``<exec_depend>`` is"
" needed. If it is only exported to satisfy the build dependencies of "
"other packages, use ``<build_export_depend>``. If both are needed, this "
"may be a better choice:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:97
msgid "**<test_depend>**"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:99
msgid ""
"In format 2, this tag can satisfy build dependencies, not just those "
"needed for executing your tests. Unlike format 1, ``<test_depend>`` may "
"now refer to a package also declared as some other type of dependency."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:102
msgid ""
"Some test-only dependencies that formerly required a ``<build_depend>``, "
"should now be expressed using ``<test_depend>``. For example:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:109
msgid "becomes:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:115
msgid ""
"In your CMakeLists.txt make sure your test dependencies are only "
"referenced within the conditional test block:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:125
msgid "**<doc_depend>**"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:127
msgid "This tag defines dependencies needed for building your documentation:"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:134
msgid ""
"This does not create binary package dependencies, unless they were also "
"declared using some other dependency tag."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:137
msgid "Dependency names"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:139
msgid ""
"Dependency names that come from :doc:`rosdep "
"<../../Tutorials/Intermediate/Rosdep>` should not need to change, as "
"those are shared across ROS 1 and ROS 2."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:141
msgid ""
"Some packages released into ROS might have different names in ROS 2 so "
"the dependencies might need to be updated accordingly."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:144
msgid "Metapackages"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:146
msgid ""
"ROS 2 doesn't have a special package type for metapackages. Metapackages "
"can still exist as regular packages that only contain runtime "
"dependencies. When migrating metapackages from ROS 1, simply remove the "
"``<metapackage />`` tag in your package manifest. See :doc:`Using "
"variants <../Using-Variants>` for more information on "
"metapackages/variants."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:152
msgid "Licensing"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:154
msgid ""
"In ROS 1 our recommended license was the `3-Clause BSD License "
"<https://opensource.org/licenses/BSD-3-Clause>`__. In ROS 2 our "
"recommended license is the `Apache 2.0 License "
"<https://www.apache.org/licenses/LICENSE-2.0>`__."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:157
msgid ""
"For any new project we recommend using the Apache 2.0 License, whether "
"ROS 1 or ROS 2."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:159
msgid ""
"However, when migrating code from ROS 1 to ROS 2 we cannot simply change "
"the license. The existing license must be preserved for any preexisting "
"contributions."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:162
msgid ""
"To that end if a package is being migrated we recommend keeping the "
"existing license and continuing to contribute to that package under the "
"existing OSI license, which we expect to be the BSD license for core "
"elements."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:164
msgid "This will keep things clear and easy to understand."
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:167
msgid "Changing the License"
msgstr ""

#: ../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:169
msgid ""
"It is possible to change the license, however you will need to contact "
"all the contributors and get permission. For most packages this is likely"
" to be a significant effort and not worth considering. If the package has"
" a small set of contributors then this may be feasible."
msgstr ""

