# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:2
msgid "How to use ros2_tracing to trace and analyze an application"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:4
msgid ""
"This guide shows how to use `ros2_tracing "
"<https://github.com/ros2/ros2_tracing>`_ to trace and analyze a ROS 2 "
"application. For this guide, the application will be `performance_test "
"<https://gitlab.com/ApexAI/performance_test>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:8
msgid "Overview"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:10
msgid "This guide covers:"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:12
msgid "running and tracing a ``performance_test`` run"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:13
msgid ""
"analyzing the trace data using `tracetools_analysis <https://github.com"
"/ros-tracing/tracetools_analysis>`_ to plot the callback durations"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:16
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:18
msgid ""
"This guide is aimed at real-time Linux systems. See the :doc:`real-time "
"system setup guide <../Miscellaneous/Building-Realtime-rt_preempt-kernel-"
"for-ROS-2>`. However, the guide will work if you are using a non-real-"
"time Linux system."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:23
msgid "Installing and building"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:25
msgid ""
"Install ROS 2 on Linux by following the :doc:`installation instructions "
"<../../Installation>`."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:29
msgid ""
"This guide should generally work with all supported Linux distributions. "
"However, you might need to adapt some commands."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:32
msgid "Install ``babeltrace`` and ``ros2trace``."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:40
msgid "Source the ROS 2 installation and verify that tracing is enabled:"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:47
msgid "You should see ``Tracing enabled`` in the output."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:49
msgid ""
"Then create a workspace, and clone ``performance_test`` and "
"``tracetools_analysis``."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:60
msgid "Install dependencies with rosdep."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:67
msgid ""
"Then build and configure ``performance_test`` for ROS 2. See its "
"`documentation "
"<https://gitlab.com/ApexAI/performance_test/-/tree/master/performance_test#performance_test>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:74
msgid "Next, we will run a ``performance_test`` experiment and trace it."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:77
msgid "Tracing"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:80
msgid "Step 1: Trace"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:82
msgid ""
"In one terminal, source the workspace and set up tracing. When running "
"the command, a list of ROS 2 userspace events will be printed. It will "
"also print the path to the directory that will contain the resulting "
"trace (under ``~/.ros/tracing``)."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:93
msgid "Press enter to start tracing."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:96
msgid "Step 2: Run Application"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:98
msgid "In a second terminal, source the workspace."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:106
msgid ""
"Then run the ``performance_test`` experiment (or your own application). "
"We simply create an experiment with a node publishing ~1 MB messages to "
"another node as fast as possible for 60 seconds using the second highest "
"real-time priority so that we don't interfere with critical kernel "
"threads. We need to run ``performance_test`` as ``root`` to be able to "
"use real-time priorities."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:115
msgid ""
"If that last command doesn't work for you (with an error like: \"error "
"while loading shared libraries\"), run the slightly-different command "
"below. This is because, for security reasons, we need to manually pass "
"``*PATH`` environment variables for some shared libraries to be found "
"(see `this explanation <https://unix.stackexchange.com/a/251374>`_)."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:125
msgid "If you're not using a real-time kernel, simply run:"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:133
msgid "Step 3: Validate Trace"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:135
msgid ""
"Once the experiment is done, in the first terminal, press enter again to "
"stop tracing. Use ``babeltrace`` to quickly look at the resulting trace."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:142
msgid ""
"The output of the above command is a human-readable version of the raw "
"Common Trace Format (CTF) data, which is a list of trace events. Each "
"event has a timestamp, an event type, some information on the process "
"that generated the event, and the values of the fields of the given event"
" type."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:145
msgid "Use the arrow keys to scroll, or press ``q`` to exit."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:147
msgid "Next, we will analyze the trace."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:150
msgid "Analysis"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:152
msgid ""
"`tracetools_analysis <https://github.com/ros-"
"tracing/tracetools_analysis>`_ provides a Python API to easily analyze "
"traces. We can use it in a `Jupyter notebook <https://jupyter.org/>`_ "
"with `bokeh <https://docs.bokeh.org/en/latest/index.html>`_ to plot the "
"data. The ``tracetools_analysis`` repository contains a `few sample "
"notebooks <https://github.com/ros-"
"tracing/tracetools_analysis/tree/rolling/tracetools_analysis/analysis>`_,"
" including `one notebook to analyze subscription callback durations "
"<https://github.com/ros-"
"tracing/tracetools_analysis/blob/rolling/tracetools_analysis/analysis/callback_duration.ipynb>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:156
msgid ""
"For this guide, we will plot the durations of the subscription callback "
"in the subscriber node."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:158
msgid "Install Jupyter notebook and bokeh, and then open the sample notebook."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:165
msgid "This will open the notebook in the browser."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:167
msgid ""
"Replace the value for the ``path`` variable in the second cell to the "
"path to the trace directory:"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:173
msgid ""
"Run the notebook by clicking the *Run* button for each cell. Running the "
"cell that does the trace processing might take a few minutes on the first"
" run, but subsequent runs will be much quicker."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:176
msgid "You should get a plot that looks similar to this:"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:-1
msgid "callback durations result plot"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:182
msgid ""
"We can see that most of the callbacks take less than 0.01 ms, but there "
"are some outliers taking over 0.02 or 0.03 ms."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:185
msgid "Conclusion"
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:187
msgid ""
"This guide showed how to install tracing-related tools. Then it showed "
"how to trace a `performance_test "
"<https://gitlab.com/ApexAI/performance_test>`_ experiment using "
"`ros2_tracing <https://github.com/ros2/ros2_tracing>`_ and plot the "
"callback durations using `tracetools_analysis <https://github.com/ros-"
"tracing/tracetools_analysis>`_."
msgstr ""

#: ../../source/Tutorials/Advanced/ROS2-Tracing-Trace-and-Analyze.rst:190
msgid ""
"For more trace analyses, take a look at the `other sample notebooks "
"<https://github.com/ros-"
"tracing/tracetools_analysis/tree/rolling/tracetools_analysis/analysis>`_ "
"and the `tracetools_analysis API documentation <https://ros-"
"tracing.gitlab.io/tracetools_analysis-api/master/tracetools_analysis/>`_."
" The `ros2_tracing design document "
"<https://github.com/ros2/ros2_tracing/blob/rolling/doc/design_ros_2.md>`_"
" also contains a lot of information."
msgstr ""

