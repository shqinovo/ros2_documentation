# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:7
msgid "Ubuntu (source)"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:12
msgid "Table of Contents"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:15
msgid "System requirements"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:16
msgid "The current Debian-based target platforms for Rolling Ridley are:"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:18
msgid "Tier 1: Ubuntu Linux - Jammy (22.04) 64-bit"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:19
msgid "Tier 3: Debian Linux - Bullseye (11) 64-bit"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:21
msgid "As defined in `REP 2000 <https://www.ros.org/reps/rep-2000.html>`_."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:24
msgid "System setup"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:27
msgid "Set locale"
msgstr ""

#: ../../source/Installation/_Ubuntu-Set-Locale.rst:1
msgid ""
"Make sure you have a locale which supports ``UTF-8``. If you are in a "
"minimal environment (such as a docker container), the locale may be "
"something minimal like ``POSIX``. We test with the following settings. "
"However, it should be fine if you're using a different UTF-8 supported "
"locale."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:32
msgid "Enable required repositories"
msgstr ""

#: ../../source/Installation/_Apt-Repositories.rst:1
msgid "You will need to add the ROS 2 apt repository to your system."
msgstr ""

#: ../../source/Installation/_Apt-Repositories.rst:3
msgid ""
"First ensure that the `Ubuntu Universe repository "
"<https://help.ubuntu.com/community/Repositories/Ubuntu>`_ is enabled."
msgstr ""

#: ../../source/Installation/_Apt-Repositories.rst:10
msgid "Now add the ROS 2 GPG key with apt."
msgstr ""

#: ../../source/Installation/_Apt-Repositories.rst:17
msgid "Then add the repository to your sources list."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:37
msgid "Install development tools"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:52
msgid "Build ROS 2"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:55
msgid "Get ROS 2 code"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:57
msgid "Create a workspace and clone all repos:"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:68
msgid "Install dependencies using rosdep"
msgstr ""

#: ../../source/Installation/_Apt-Upgrade-Admonition.rst:1
msgid ""
"ROS 2 packages are built on frequently updated Ubuntu systems. It is "
"always recommended that you ensure your system is up to date before "
"installing new packages."
msgstr ""

#: ../../source/Installation/_rosdep_Linux_Mint.rst:1
msgid ""
"**Note**: If you're using a distribution that is based on Ubuntu (like "
"Linux Mint) but does not identify itself as such, you'll get an error "
"message like ``Unsupported OS [mint]``. In this case append "
"``--os=ubuntu:jammy`` to the above command."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:81
msgid "Install additional RMW implementations (optional)"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:83
msgid ""
"The default middleware that ROS 2 uses is ``Fast DDS``, but the "
"middleware (RMW) can be replaced at build or runtime. See the :doc:`guide"
" <../../How-To-Guides/Working-with-multiple-RMW-implementations>` on how "
"to work with multiple RMWs."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:87
msgid "Build the code in the workspace"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:89
msgid ""
"If you have already installed ROS 2 another way (either via Debians or "
"the binary distribution), make sure that you run the below commands in a "
"fresh environment that does not have those other installations sourced. "
"Also ensure that you do not have ``source "
"/opt/ros/${ROS_DISTRO}/setup.bash`` in your ``.bashrc``. You can make "
"sure that ROS 2 is not sourced with the command ``printenv | grep -i "
"ROS``. The output should be empty."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:94
msgid ""
"More info on working with a ROS workspace can be found in :doc:`this "
"tutorial <../../Tutorials/Beginner-Client-Libraries/Colcon-Tutorial>`."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:103
msgid ""
"If you are having trouble compiling all examples and this is preventing "
"you from completing a successful build, you can use the ``--packages-"
"skip`` colcon flag to ignore the package that is causing problems. For "
"instance, if you don't want to install the large OpenCV library, you "
"could skip building the packages that depend on it using the command:"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:111
msgid "Setup environment"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:113
msgid "Set up your environment by sourcing the following file."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:124
msgid "Try some examples"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:126
msgid "In one terminal, source the setup file and then run a C++ ``talker``\\ :"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:133
msgid ""
"In another terminal source the setup file and then run a Python "
"``listener``\\ :"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:140
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages "
"and the ``listener`` saying ``I heard`` those messages. This verifies "
"both the C++ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:145
msgid "Next steps"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:147
msgid ""
"Continue with the :doc:`tutorials and demos <../../Tutorials>` to "
"configure your environment, create your own workspace and packages, and "
"learn ROS 2 core concepts."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:150
msgid "Use the ROS 1 bridge (optional)"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:152
msgid ""
"The ROS 1 bridge can connect topics from ROS 1 to ROS 2 and vice-versa. "
"See the dedicated :doc:`document <../../How-To-Guides/Using-ros1_bridge-"
"Jammy-upstream>` on how to build and use the ROS 1 bridge."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:156
msgid "Alternate compilers"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:158
msgid ""
"Using a different compiler besides gcc to compile ROS 2 is easy. If you "
"set the environment variables ``CC`` and ``CXX`` to executables for a "
"working C and C++ compiler, respectively, and retrigger CMake "
"configuration (by using ``--force-cmake-config`` or by deleting the "
"packages you want to be affected), CMake will reconfigure and use the "
"different compiler."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:161
msgid "Clang"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:163
msgid "To configure CMake to detect and use Clang:"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:173
msgid "Stay up to date"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:175
msgid ""
"See :doc:`../Maintaining-a-Source-Checkout` to periodically refresh your "
"source installation."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:178
msgid "Troubleshoot"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:180
msgid ""
"Troubleshooting techniques can be found :ref:`here <linux-"
"troubleshooting>`."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:183
msgid "Uninstall"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:185
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not"
" sourcing the workspace's ``setup`` file. This way, your environment will"
" behave as though there is no Rolling install on your system."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:188
msgid ""
"If you're also trying to free up space, you can delete the entire "
"workspace directory with:"
msgstr ""

