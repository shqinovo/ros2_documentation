# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:8
msgid "Using Xacro to clean up your code"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:10
msgid ""
"**Goal:** Learn some tricks to reduce the amount of code in a URDF file "
"using Xacro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:12
msgid "**Tutorial level:** Intermediate"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:14
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:18
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:20
msgid ""
"By now, if you’re following all these steps at home with your own robot "
"design, you might be sick of doing all sorts of math to get very simple "
"robot descriptions to parse correctly. Fortunately, you can use the "
"`xacro <https://index.ros.org/p/xacro>`_ package to make your life "
"simpler. It does three things that are very helpful."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:24
#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:89
msgid "Constants"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:25
msgid "Simple Math"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:26
#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:168
msgid "Macros"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:28
msgid ""
"In this tutorial, we take a look at all these shortcuts to help reduce "
"the overall size of the URDF file and make it easier to read and "
"maintain."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:31
msgid "Using Xacro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:32
msgid ""
"As its name implies, `xacro <https://index.ros.org/p/xacro>`_ is a macro "
"language for XML. The xacro program runs all of the macros and outputs "
"the result. Typical usage looks something like this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:40
msgid ""
"You can also automatically generate the urdf in a launch file. This is "
"convenient because it stays up to date and doesn’t use up hard drive "
"space. However, it does take time to generate, so be aware that your "
"launch file might take longer to start up."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:44
msgid ""
"To run xacro within your launch file, you need to put the ``Command`` "
"substitution as a parameter to the ``robot_state_publisher``."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:59
msgid ""
"An easier way to load the robot model is to use the `urdf_launch "
"<https://github.com/ros/urdf_launch>`_ package to automatically load the "
"xacro/urdf."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:80
msgid ""
"At the top of the URDF file, you must specify a namespace in order for "
"the file to parse properly. For example, these are the first two lines of"
" a valid xacro file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:90
msgid "Let’s take a quick look at our base_link in R2D2."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:108
msgid ""
"The information here is a little redundant. We specify the length and "
"radius of the cylinder twice. Worse, if we want to change that, we need "
"to do so in two different places."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:112
msgid ""
"Fortunately, xacro allows you to specify properties which act as "
"constants. Instead, of the above code, we can write this."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:133
msgid ""
"The two values are specified in the first two lines. They can be defined "
"just about anywhere (assuming valid XML), at any level, before or after "
"they are used. Usually they go at the top."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:136
msgid ""
"Instead of specifying the actual radius in the geometry element, we use a"
" dollar sign and curly brackets to signify the value."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:137
msgid "This code will generate the same code shown above."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:139
msgid ""
"The value of the contents of the ${} construct are then used to replace "
"the ${}. This means you can combine it with other text in the attribute."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:147
msgid "This will generate"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:153
msgid ""
"However, the contents in the ${} don’t have to only be a property, which "
"brings us to our next point..."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:156
msgid "Math"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:157
msgid ""
"You can build up arbitrarily complex expressions in the ${} construct "
"using the four basic operations (+,-,*,/), the unary minus, and "
"parenthesis. Examples:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:165
msgid ""
"You can also use more than the basic mathematical operations, like "
"``sin`` and ``cos``."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:169
msgid "Here’s the biggest and most useful component to the xacro package."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:172
msgid "Simple Macro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:173
msgid "Let’s take a look at a simple useless macro."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:182
msgid ""
"(This is useless, since if the origin is not specified, it has the same "
"value as this.) This code will generate the following."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:188
msgid ""
"The name is not technically a required element, but you need to specify "
"it to be able to use it."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:189
msgid ""
"Every instance of the ``<xacro:$NAME />`` is replaced with the contents "
"of the ``xacro:macro`` tag."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:190
msgid ""
"Note that even though its not exactly the same (the two attributes have "
"switched order), the generated XML is equivalent."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:191
msgid ""
"If the xacro with a specified name is not found, it will not be expanded "
"and will NOT generate an error."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:194
msgid "Parameterized Macro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:195
msgid ""
"You can also parameterize macros so that they don’t generate the same "
"exact text every time. When combined with the math functionality, this is"
" even more powerful."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:198
msgid "First, let’s take an example of a simple macro used in R2D2."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:211
msgid "This can be used with the code"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:217
msgid ""
"The parameters act just like properties, and you can use them in "
"expressions"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:219
msgid "You can also use entire blocks as parameters too."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:243
msgid ""
"To specify a block parameter, include an asterisk before its parameter "
"name."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:244
msgid "A block can be inserted using the insert_block command"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:245
msgid "Insert the block as many times as you wish."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:248
msgid "Practical Usage"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:249
msgid ""
"The xacro language is rather flexible in what it allows you to do. Here "
"are a few useful ways that xacro is used in the `R2D2 model "
"<https://github.com/ros/urdf_tutorial/blob/master/urdf/08-macroed.urdf.xacro>`_,"
" in addition to the default inertial macro shown above."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:252
msgid ""
"To see the model generated by a xacro file, run the same command as with "
"previous tutorials:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:258
msgid ""
"(The launch file has been running the xacro command this whole time, but "
"since there were no macros to expand, it didn't matter)"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:261
msgid "Leg macro"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:262
msgid ""
"Often you want to create multiple similar looking objects in different "
"locations. You can use a macro and some simple math to reduce the amount "
"of code you have to write, like we do with R2’s two legs."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:295
msgid "Common Trick 1: Use a name prefix to get two similarly named objects."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:296
msgid ""
"Common Trick 2: Use math to calculate joint origins. In the case that you"
" change the size of your robot, changing a property with some math to "
"calculate the joint offset will save a lot of trouble."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Using-Xacro-to-Clean-Up-a-URDF-File.rst:298
msgid ""
"Common Trick 3: Using a reflect parameter, and setting it to 1 or -1. See"
" how we use the reflect parameter to put the legs on either side of the "
"body in the base_to_${prefix}_leg origin."
msgstr ""

