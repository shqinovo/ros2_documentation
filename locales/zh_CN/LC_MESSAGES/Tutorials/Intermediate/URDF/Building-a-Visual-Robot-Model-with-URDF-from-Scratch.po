# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:8
msgid "Building a visual robot model from scratch"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:10
msgid ""
"**Goal:** Learn how to build a visual model of a robot that you can view "
"in Rviz"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:12
msgid "**Tutorial level:** Intermediate"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:14
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:18
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:20
msgid "This tutorial assumes you know how to write well-formatted XML code"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:22
msgid ""
"In this tutorial, we’re going to build a visual model of a robot that "
"vaguely looks like R2D2. In later tutorials, you’ll learn how to "
":doc:`articulate the model <./Building-a-Movable-Robot-Model-with-URDF>`,"
" :doc:`add in some physical properties <./Adding-Physical-and-Collision-"
"Properties-to-a-URDF-Model>`, and :doc:`generate neater code with xacro "
"<./Using-Xacro-to-Clean-Up-a-URDF-File>`, but for now, we’re going to "
"focus on getting the visual geometry correct."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:25
msgid ""
"Before continuing, make sure you have the `joint_state_publisher "
"<https://index.ros.org/p/joint_state_publisher>`_ package installed. If "
"you installed `urdf_tutorial <https://index.ros.org/p/urdf_tutorial>`_ "
"binaries, this should already be the case. If not, please update your "
"installation to include that package (use ``rosdep`` to check)."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:29
msgid ""
"All of the robot models mentioned in this tutorial (and the source files)"
" can be found in the `urdf_tutorial "
"<https://index.ros.org/p/urdf_tutorial>`_ package."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:32
msgid "One Shape"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:34
msgid ""
"First, we’re just going to explore one simple shape. Here’s about as "
"simple as a urdf as you can make. `[Source: 01-myfirst.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/01-myfirst.urdf>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:51
msgid ""
"To translate the XML into English, this is a robot with the name "
"``myfirst``, that contains only one link (a.k.a. part), whose visual "
"component is just a cylinder 0.6 meters long with a 0.2 meter radius. "
"This may seem like a lot of enclosing tags for a simple “hello world” "
"type example, but it will get more complicated, trust me."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:54
msgid "To examine the model, launch the ``display.launch.py`` file:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:60
msgid "This does three things:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:62
msgid ""
"Loads the specified model and saves it as a parameter for the "
"``robot_state_publisher`` node."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:63
msgid ""
"Runs nodes to publish `sensor_msgs/msg/JointState "
"<https://github.com/ros2/common_interfaces/blob/rolling/sensor_msgs/msg/JointState.msg>`_"
" and transforms (more on these later)"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:64
msgid "Starts Rviz with a configuration file"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:66
msgid ""
"After launching ``display.launch.py``, you should end up with RViz "
"showing you the following:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:-1
msgid "my first image"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:76
msgid "Things to note:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:73
msgid ""
"The fixed frame is the transform frame where the center of the grid is "
"located. Here, it’s a frame defined by our one link, base_link."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:75
msgid ""
"The visual element (the cylinder) has its origin at the center of its "
"geometry as a default. Hence, half the cylinder is below the grid."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:-1
#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:79
msgid "Multiple Shapes"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:81
msgid ""
"Now let’s look at how to add multiple shapes/links. If we just add more "
"link elements to the urdf, the parser won’t know where to put them. So, "
"we have to add joints. Joint elements can refer to both flexible and "
"inflexible joints. We’ll start with inflexible, or fixed joints. "
"`[Source: 02-multipleshapes.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/02-multipleshapes.urdf>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:115
msgid "Note how we defined a 0.6m x 0.1m x 0.2m box"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:116
msgid ""
"The joint is defined in terms of a parent and a child. URDF is ultimately"
" a tree structure with one root link. This means that the leg’s position "
"is dependent on the base_link’s position."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:128
msgid ""
"Both of the shapes overlap with each other, because they share the same "
"origin. If we want them not to overlap we must define more origins."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:132
msgid "Origins"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:134
msgid ""
"R2D2’s leg attaches to the top half of his torso, on the side. So that’s "
"where we specify the origin of the JOINT to be. Also, it doesn’t attach "
"to the middle of the leg, it attaches to the upper part, so we must "
"offset the origin for the leg as well. We also rotate the leg so it is "
"upright. `[Source: 03-origins.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/03-origins.urdf>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:169
msgid ""
"Let’s start by examining the joint’s origin. It is defined in terms of "
"the parent’s reference frame. So we are -0.22 meters in the y direction "
"(to our left, but to the right relative to the axes) and 0.25 meters in "
"the z direction (up). This means that the origin for the child link will "
"be up and to the right, regardless of the child link’s visual origin tag."
" Since we didn’t specify a rpy (roll pitch yaw) attribute, the child "
"frame will be default have the same orientation as the parent frame."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:174
msgid ""
"Now, looking at the leg’s visual origin, it has both a xyz and rpy "
"offset. This defines where the center of the visual element should be, "
"relative to its origin. Since we want the leg to attach at the top, we "
"offset the origin down by setting the z offset to be -0.3 meters. And "
"since we want the long part of the leg to be parallel to the z axis, we "
"rotate the visual part PI/2 around the Y axis."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:-1
msgid "Origins Screenshot"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:187
msgid ""
"The launch file runs packages that will create TF frames for each link in"
" your model based on your URDF. Rviz uses this information to figure out "
"where to display each shape."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:189
msgid ""
"If a TF frame does not exist for a given URDF link, then it will be "
"placed at the origin in white (ref. `related question "
"<http://answers.ros.org/question/207947/how-do-you-use-externally-"
"defined-materials-in-a-urdfxacro-file/>`_)."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:192
msgid "Material Girl"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:194
msgid ""
"“Alright,” I hear you say. “That’s very cute, but not everyone owns a "
"B21. My robot and R2D2 are not red!” That’s a good point. Let’s take a "
"look at the material tag. `[Source: 04-materials.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/04-materials.urdf>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:257
msgid ""
"The body is now blue. We’ve defined a new material called “blue”, with "
"the red, green, blue and alpha channels defined as 0,0,0.8 and 1 "
"respectively. All of the values can be in the range [0,1]. This material "
"is then referenced by the base_link's visual element. The white material "
"is defined similarly."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:262
msgid ""
"You could also define the material tag from within the visual element, "
"and even reference it in other links. No one will even complain if you "
"redefine it though."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:264
msgid ""
"You can also use a texture to specify an image file to be used for "
"coloring the object"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:-1
msgid "Materials Screenshot"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:275
msgid "Finishing the Model"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:277
msgid ""
"Now we finish the model off with a few more shapes: feet, wheels, and "
"head. Most notably, we add a sphere and a some meshes. We’ll also add few"
" other pieces that we’ll use later. `[Source: 05-visual.urdf] "
"<https://github.com/ros/urdf_tutorial/blob/ros2/urdf/05-visual.urdf>`_"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:-1
msgid "Visual Screenshot"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:538
msgid "How to add the sphere should be fairly self explanatory:"
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:551
msgid ""
"The meshes here were borrowed from the PR2. They are separate files which"
" you have to specify the path for. You should use the "
"``package://NAME_OF_PACKAGE/path`` notation. The meshes for this tutorial"
" are located within the ``urdf_tutorial`` package, in a folder called "
"meshes."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:567
msgid ""
"The meshes can be imported in a number of different formats. STL is "
"fairly common, but the engine also supports DAE, which can have its own "
"color data, meaning you don’t have to specify the color/material. Often "
"these are in separate files. These meshes reference the ``.tif`` files "
"also in the meshes folder."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:571
msgid ""
"Meshes can also be sized using relative scaling parameters or a bounding "
"box size."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:572
msgid "We could have also referred to meshes in a completely different package."
msgstr ""

#: ../../source/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.rst:574
msgid ""
"There you have it. A R2D2-like URDF model. Now you can continue on to the"
" next step, :doc:`making it move <./Building-a-Movable-Robot-Model-with-"
"URDF>`."
msgstr ""

