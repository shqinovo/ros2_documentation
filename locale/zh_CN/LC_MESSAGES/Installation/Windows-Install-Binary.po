# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Installation/Windows-Install-Binary.rst:2
msgid "Windows (binary)"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:6
msgid "Table of Contents"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:8
msgid ""
"This page explains how to install ROS 2 on Windows from a pre-built "
"binary package."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:12
msgid ""
"The pre-built binary does not include all ROS 2 packages. All packages in"
" the `ROS base variant <https://ros.org/reps/rep-2001.html#ros-base>`_ "
"are included, and only a subset of packages in the `ROS desktop variant "
"<https://ros.org/reps/rep-2001.html#desktop-variants>`_ are included. The"
" exact list of packages are described by the repositories listed in `this"
" ros2.repos file "
"<https://github.com/ros2/ros2/blob/rolling/ros2.repos>`_."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:17
msgid "System requirements"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:19
msgid "Only Windows 10 is supported."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:2
msgid "System setup"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:5
msgid "Install Chocolatey"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:7
msgid ""
"Chocolatey is a package manager for Windows, install it by following "
"their installation instructions:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:9
msgid "https://chocolatey.org/install"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:11
msgid "You'll use Chocolatey to install some other developer tools."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:14
msgid "Install Python"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:16
msgid ""
"Open a Command Prompt and type the following to install Python via "
"Chocolatey:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:24
msgid ""
"Chocolatey will install Python in ``C:\\Python38``, and the rest of the "
"installation expects it to be there. If you've installed Python somewhere"
" else, you must copy or link it to that location."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:28
msgid "Install Visual C++ Redistributables"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:30
msgid ""
"Open a Command Prompt and type the following to install them via "
"Chocolatey:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:37
msgid "Install OpenSSL"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:39
msgid ""
"Download the *Win64 OpenSSL v1.1.1n* OpenSSL installer from `this page "
"<https://slproweb.com/products/Win32OpenSSL.html>`__. Scroll to the "
"bottom of the page and download *Win64 OpenSSL v1.1.1t*. Don't download "
"the Win32 or Light versions, or the v3.X.Y installers."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:43
msgid ""
"Run the installer with default parameters, as the following commands "
"assume you used the default installation directory."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:45
msgid "This command sets an environment variable that persists over sessions:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:51
msgid ""
"You will need to append the OpenSSL-Win64 bin folder to your PATH. You "
"can do this by clicking the Windows icon, typing \"Environment "
"Variables\", then clicking on \"Edit the system environment variables\". "
"In the resulting dialog, click \"Environment Variables\", then click "
"\"Path\" on the bottom pane, finally click \"Edit\" and add the path "
"below."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:55
msgid "``C:\\Program Files\\OpenSSL-Win64\\bin\\``"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:58
msgid "Install Visual Studio"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:60
msgid "Install Visual Studio 2019."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:62
msgid ""
"If you already have a paid version of Visual Studio 2019 (Professional, "
"Enterprise), skip this step."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:64
msgid ""
"Microsoft provides a free of charge version of Visual Studio 2019, named "
"Community, which can be used to build applications that use ROS 2. `You "
"can download the installer directly through this link. "
"<https://visualstudio.microsoft.com/thank-you-downloading-visual-"
"studio/?sku=Community&rel=16&src=myvs&utm_medium=microsoft&utm_source=my.visualstudio.com&utm_campaign=download&utm_content=vs+community+2019>`_"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:67
msgid "Make sure that the Visual C++ features are installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:69
msgid ""
"An easy way to make sure they're installed is to select the ``Desktop "
"development with C++`` workflow during the install."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:73
msgid ""
"Make sure that no C++ CMake tools are installed by unselecting them in "
"the list of components to be installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:76
msgid "Install OpenCV"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:78
msgid "Some of the examples require OpenCV to be installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:80
msgid ""
"You can download a precompiled version of OpenCV 3.4.6 from "
"https://github.com/ros2/ros2/releases/download/opencv-"
"archives/opencv-3.4.6-vc16.VS2019.zip ."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:82
msgid ""
"Assuming you unpacked it to ``C:\\opencv``, type the following on a "
"Command Prompt (requires Admin privileges):"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:88
msgid ""
"Since you are using a precompiled ROS version, we have to tell it where "
"to find the OpenCV libraries. You have to extend the ``PATH`` variable to"
" ``C:\\opencv\\x64\\vc16\\bin``."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:92
msgid "Install dependencies"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:94
msgid ""
"There are a few dependencies not available in the Chocolatey package "
"database. In order to ease the manual installation process, we provide "
"the necessary Chocolatey packages."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:97
msgid "As some chocolatey packages rely on it, we start by installing CMake"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:103
msgid ""
"You will need to append the CMake bin folder ``C:\\Program "
"Files\\CMake\\bin`` to your PATH."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:105
msgid ""
"Please download these packages from `this <https://github.com/ros2/choco-"
"packages/releases/latest>`__ GitHub repository."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:107
msgid "asio.1.12.1.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:108
msgid "bullet.3.17.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:109
msgid "cunit.2.1.3.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:110
msgid "eigen-3.3.4.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:111
msgid "tinyxml-usestl.2.6.2.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:112
msgid "tinyxml2.6.0.0.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:114
msgid ""
"Once these packages are downloaded, open an administrative shell and "
"execute the following command:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:120
msgid ""
"Please replace ``<PATH\\TO\\DOWNLOADS>`` with the folder you downloaded "
"the packages to."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:122
msgid "First upgrade pip and setuptools:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:128
msgid "Now install some additional python dependencies:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:135
msgid "Install miscellaneous prerequisites"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:137
msgid "Next install xmllint:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:139
msgid ""
"Download the `64 bit binary archives "
"<https://www.zlatkovic.com/pub/libxml/64bit/>`__ of ``libxml2`` (and its "
"dependencies ``iconv`` and ``zlib``) from "
"https://www.zlatkovic.com/projects/libxml/"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:140
msgid "Unpack all archives into e.g. ``C:\\xmllint``"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:141
msgid "Add ``C:\\xmllint\\bin`` to the ``PATH``."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:144
msgid "Install Qt5"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:146
msgid ""
"Download the `5.12.X offline installer <https://www.qt.io/offline-"
"installers>`_ from Qt's website. Run the installer. Make sure to select "
"the ``MSVC 2017 64-bit`` component under the ``Qt`` -> ``Qt 5.12.12`` "
"tree."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:150
msgid ""
"Finally, in an administrator ``cmd.exe`` window set these environment "
"variables. The commands below assume you installed it to the default "
"location of ``C:\\Qt``."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:161
msgid ""
"This path might change based on the installed MSVC version, the directory"
" Qt was installed to, and the version of Qt installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:164
msgid "RQt dependencies"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:166
msgid ""
"To run rqt_graph you need to `download "
"<https://graphviz.gitlab.io/_pages/Download/Download_windows.html>`__ and"
" install `Graphviz <https://graphviz.gitlab.io/>`__. The installer will "
"ask if to add graphviz to PATH, choose to either add it to the current "
"user or all users."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:26
msgid "Install ROS 2"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:28
msgid ""
"Binary releases of Rolling Ridley are not provided. Instead you may "
"download nightly :ref:`prerelease binaries <Prerelease_binaries>`."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:31
msgid ""
"Download the latest package for Windows, e.g., ``ros2-package-windows-"
"AMD64.zip``."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:35
msgid ""
"There may be more than one binary download option which might cause the "
"file name to differ."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:39
msgid ""
"To install debug libraries for ROS 2, see `Extra Stuff for Debug`_. Then "
"continue on with downloading ``ros2-package-windows-debug-AMD64.zip``."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:42
msgid "Unpack the zip file somewhere (we'll assume ``C:\\dev\\ros2_rolling``\\ )."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:45
msgid "Install additional RMW implementations (optional)"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:47
msgid ""
"The default middleware that ROS 2 uses is ``Fast DDS``, but the "
"middleware (RMW) can be replaced at runtime. See the :doc:`guide <../How-"
"To-Guides/Working-with-multiple-RMW-implementations>` on how to work with"
" multiple RMWs."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:52
#: ../../source/Installation/Windows-Install-Binary.rst:152
msgid "Setup environment"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:54
msgid ""
"Start a command shell and source the ROS 2 setup file to set up the "
"workspace:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:60
msgid ""
"It is normal that the previous command, if nothing else went wrong, "
"outputs \"The system cannot find the path specified.\" exactly once."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:63
msgid "Try some examples"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:65
msgid ""
"In a command shell, set up the ROS 2 environment as described above and "
"then run a C++ ``talker``\\ :"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:71
msgid "Start another command shell and run a Python ``listener``\\ :"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:77
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages "
"and the ``listener`` saying ``I heard`` those messages. This verifies "
"both the C++ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:83
msgid "Next steps"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:85
msgid ""
"Continue with the :doc:`tutorials and demos <../../Tutorials>` to "
"configure your environment, create your own workspace and packages, and "
"learn ROS 2 core concepts."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:88
msgid "Troubleshoot"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:90
msgid ""
"Troubleshooting techniques can be found :ref:`here <windows-"
"troubleshooting>`."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:93
#: ../../source/Installation/Windows-Install-Binary.rst:171
msgid "Uninstall"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:95
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not"
" sourcing the workspace's ``setup`` file. This way, your environment will"
" behave as though there is no Rolling install on your system."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:98
msgid ""
"If you're also trying to free up space, you can delete the entire "
"workspace directory with:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:105
msgid "Extra Stuff for Debug"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:107
msgid ""
"To download the ROS 2 debug libraries you'll need to download "
"``ros2-rolling-*-windows-debug-AMD64.zip``. Please note that debug "
"libraries require some more additional configuration/setup to work as "
"given below."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:110
msgid ""
"Python installation may require modification to enable debugging symbols "
"and debug binaries:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:112
msgid "Search in windows **Search Bar** and open **Apps and Features**."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:113
msgid "Search for the installed Python version."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:115
msgid "Click Modify."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:120
msgid "Click Next to go to **Advanced Options**."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:125
msgid ""
"Make sure **Download debugging symbols** and **Download debug binaries** "
"are checked."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:130
msgid "Click Install."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:133
msgid "(Alternative) ROS 2 Build Installation from aka.ms/ros"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:135
msgid ""
"https://aka.ms/ros project hosts ROS 2 builds against the release "
"snapshots. This section explains how to install ROS 2 from this channel."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:139
msgid "Install ROS 2 builds"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:141
msgid "In an administrative command prompt, run the following commands."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:154
msgid ""
"Start an administrative command prompt and source the ROS 2 setup file to"
" set up the workspace:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:161
msgid "Stay up-to-date"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:163
msgid "To keep up-to-date with the latest builds, run:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:173
msgid ""
"If you want to completely remove the environment downloaded above, run "
"this command:"
msgstr ""

