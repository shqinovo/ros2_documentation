# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:8
msgid "Writing an action server and client (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:10
msgid "**Goal:** Implement an action server and client in C++."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:12
msgid "**Tutorial level:** Intermediate"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:14
msgid "**Time:** 15 minutes"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:18
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:21
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:23
msgid ""
"Actions are a form of asynchronous communication in ROS. *Action clients*"
" send goal requests to *action servers*. *Action servers* send goal "
"feedback and results to *action clients*."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:28
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:30
msgid ""
"You will need the ``custom_action_interfaces`` package and the "
"``Fibonacci.action`` interface defined in the previous tutorial, :doc"
":`../Creating-an-Action`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:34
msgid "Tasks"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:37
msgid "1 Creating the custom_action_cpp package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:39
msgid ""
"As we saw in the :doc:`../../Beginner-Client-Libraries/Creating-Your-"
"First-ROS2-Package` tutorial, we need to create a new package to hold our"
" C++ and supporting code."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:42
msgid "1.1 Creating the custom_action_cpp package"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:44
msgid ""
"Go into the action workspace you created in the :doc:`previous tutorial "
"<../Creating-an-Action>` (remember to source the workspace), and create a"
" new package for the C++ action server:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:49
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:56
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:63
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:71
msgid "1.2 Adding in visibility control"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:73
msgid ""
"In order to make the package compile and work on Windows, we need to add "
"in some \"visibility control\". For more details, see :ref:`Windows "
"Symbol Visibility in the Windows Tips and Tricks document "
"<Windows_Symbol_Visibility>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:76
msgid ""
"Open up "
"``custom_action_cpp/include/custom_action_cpp/visibility_control.h``, and"
" put the following code in:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:126
msgid "2 Writing an action server"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:128
msgid ""
"Let's focus on writing an action server that computes the Fibonacci "
"sequence using the action we created in the :doc:`../Creating-an-Action` "
"tutorial."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:131
msgid "2.1 Writing the action server code"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:133
msgid ""
"Open up ``custom_action_cpp/src/fibonacci_action_server.cpp``, and put "
"the following code in:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:138
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:264
msgid "The first few lines include all of the headers we need to compile."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:140
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:266
msgid "Next we create a class that is a derived class of ``rclcpp::Node``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:146
msgid ""
"The constructor for the ``FibonacciActionServer`` class initializes the "
"node name as ``fibonacci_action_server``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:152
msgid "The constructor also instantiates a new action server:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:158
msgid "An action server requires 6 things:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:160
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:286
msgid "The templated action type name: ``Fibonacci``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:161
msgid "A ROS 2 node to add the action to: ``this``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:162
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:288
msgid "The action name: ``'fibonacci'``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:163
msgid "A callback function for handling goals: ``handle_goal``"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:164
msgid "A callback function for handling cancellation: ``handle_cancel``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:165
msgid "A callback function for handling goal accept: ``handle_accept``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:167
msgid ""
"The implementation of the various callbacks is next in the file. Note "
"that all of the callbacks need to return quickly, otherwise we risk "
"starving the executor."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:170
msgid "We start with the callback for handling new goals:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:176
msgid "This implementation just accepts all goals."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:178
msgid "Next up is the callback for dealing with cancellation:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:184
msgid ""
"This implementation just tells the client that it accepted the "
"cancellation."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:186
msgid "The last of the callbacks accepts a new goal and starts processing it:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:192
msgid ""
"Since the execution is a long-running operation, we spawn off a thread to"
" do the actual work and return from ``handle_accepted`` quickly."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:194
msgid ""
"All further processing and updates are done in the ``execute`` method in "
"the new thread:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:200
msgid ""
"This work thread processes one sequence number of the Fibonacci sequence "
"every second, publishing a feedback update for each step. When it has "
"finished processing, it marks the ``goal_handle`` as succeeded, and "
"quits."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:203
msgid ""
"We now have a fully functioning action server.  Let's get it built and "
"running."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:206
msgid "2.2 Compiling the action server"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:208
msgid ""
"In the previous section we put the action server code into place. To get "
"it to compile and run, we need to do a couple of additional things."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:211
msgid ""
"First we need to setup the CMakeLists.txt so that the action server is "
"compiled. Open up ``custom_action_cpp/CMakeLists.txt``, and add the "
"following right after the ``find_package`` calls:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:235
#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:363
msgid ""
"And now we can compile the package.  Go to the top-level of the "
"``ros2_ws``, and run:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:241
msgid ""
"This should compile the entire workspace, including the "
"``fibonacci_action_server`` in the ``custom_action_cpp`` package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:244
msgid "2.3 Running the action server"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:246
msgid ""
"Now that we have the action server built, we can run it. Source the "
"workspace we just built (``ros2_ws``), and try to run the action server:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:254
msgid "3 Writing an action client"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:257
msgid "3.1 Writing the action client code"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:259
msgid ""
"Open up ``custom_action_cpp/src/fibonacci_action_client.cpp``, and put "
"the following code in:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:272
msgid ""
"The constructor for the ``FibonacciActionClient`` class initializes the "
"node name as ``fibonacci_action_client``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:278
msgid "The constructor also instantiates a new action client:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:284
msgid "An action client requires 3 things:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:287
msgid "A ROS 2 node to add the action client to: ``this``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:290
msgid ""
"We also instantiate a ROS timer that will kick off the one and only call "
"to ``send_goal``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:296
msgid "When the timer expires, it will call ``send_goal``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:302
msgid "This function does the following:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:304
msgid "Cancels the timer (so it is only called once)."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:305
msgid "Waits for the action server to come up."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:306
msgid "Instantiates a new ``Fibonacci::Goal``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:307
msgid "Sets the response, feedback, and result callbacks."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:308
msgid "Sends the goal to the server."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:310
msgid ""
"When the server receives and accepts the goal, it will send a response to"
" the client. That response is handled by ``goal_response_callback``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:317
msgid ""
"Assuming the goal was accepted by the server, it will start processing. "
"Any feedback to the client will be handled by the ``feedback_callback``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:324
msgid ""
"When the server is finished processing, it will return a result to the "
"client. The result is handled by the ``result_callback``:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:331
msgid ""
"We now have a fully functioning action client.  Let's get it built and "
"running."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:334
msgid "3.2 Compiling the action client"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:336
msgid ""
"In the previous section we put the action client code into place. To get "
"it to compile and run, we need to do a couple of additional things."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:339
msgid ""
"First we need to setup the CMakeLists.txt so that the action client is "
"compiled. Open up ``custom_action_cpp/CMakeLists.txt``, and add the "
"following right after the ``find_package`` calls:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:369
msgid ""
"This should compile the entire workspace, including the "
"``fibonacci_action_client`` in the ``custom_action_cpp`` package."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:372
msgid "3.3 Running the action client"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:374
msgid ""
"Now that we have the action client built, we can run it. First make sure "
"that an action server is running in a separate terminal. Now source the "
"workspace we just built (``ros2_ws``), and try to run the action client:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:382
msgid ""
"You should see logged messages for the goal being accepted, feedback "
"being printed, and the final result."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:385
msgid "Summary"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:387
msgid ""
"In this tutorial, you put together a C++ action server and action client "
"line by line, and configured them to exchange goals, feedback, and "
"results."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:390
msgid "Related content"
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:392
msgid ""
"There are several ways you could write an action server and client in "
"C++; check out the ``minimal_action_server`` and "
"``minimal_action_client`` packages in the `ros2/examples "
"<https://github.com/ros2/examples/tree/rolling/rclcpp>`_ repo."
msgstr ""

#: ../../source/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.rst:394
msgid ""
"For more detailed information about ROS actions, please refer to the "
"`design article <http://design.ros2.org/articles/actions.html>`__."
msgstr ""

