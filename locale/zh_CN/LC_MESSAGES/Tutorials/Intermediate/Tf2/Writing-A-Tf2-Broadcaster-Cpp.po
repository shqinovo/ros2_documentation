# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-08 06:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:8
msgid "Writing a broadcaster (C++)"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:10
msgid "**Goal:** Learn how to broadcast the state of a robot to tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:12
msgid "**Tutorial level:** Intermediate"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:14
msgid "**Time:** 15 minutes"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:18
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:21
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:23
msgid ""
"In the next two tutorials we will write the code to reproduce the demo "
"from the :doc:`Introduction to tf2 <./Introduction-To-Tf2>` tutorial. "
"After that, following tutorials focus on extending the demo with more "
"advanced tf2 features, including the usage of timeouts in transformation "
"lookups and time travel."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:27
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:29
msgid ""
"This tutorial assumes you have a working knowledge of ROS 2 and you have "
"completed the :doc:`Introduction to tf2 tutorial <./Introduction-To-Tf2>`"
" and :doc:`tf2 static broadcaster tutorial (C++) <./Writing-A-Tf2-Static-"
"Broadcaster-Cpp>`. In previous tutorials, you learned how to :doc:`create"
" a workspace <../../Beginner-Client-"
"Libraries/Creating-A-Workspace/Creating-A-Workspace>` and :doc:`create a "
"package <../../Beginner-Client-Libraries/Creating-Your-First-"
"ROS2-Package>`. You also have created the ``learning_tf2_cpp`` "
":doc:`package <./Writing-A-Tf2-Static-Broadcaster-Cpp>`, which is where "
"we will continue working from."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:34
msgid "Tasks"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:37
msgid "1 Write the broadcaster node"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:39
msgid ""
"Let's first create the source files. Go to the ``learning_tf2_cpp`` "
"package we created in the previous tutorial. Inside the ``src`` directory"
" download the example broadcaster code by entering the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:45
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:340
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:358
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:380
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:51
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:346
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:364
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:386
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:57
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:350
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:370
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:392
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:59
msgid "In a Windows command line prompt:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:65
msgid "Or in powershell:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:71
msgid "Open the file using your preferred text editor."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:155
msgid "1.1 Examine the code"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:157
msgid ""
"Now, let's take a look at the code that is relevant to publishing the "
"turtle pose to tf2. Firstly, we define and acquire a single parameter "
"``turtlename``, which specifies a turtle name, e.g. ``turtle1`` or "
"``turtle2``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:164
msgid ""
"Afterward, the node subscribes to topic ``turtleX/pose`` and runs "
"function ``handle_turtle_pose`` on every incoming message."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:172
msgid ""
"Now, we create a ``TransformStamped`` object and give it the appropriate "
"metadata."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:174
msgid ""
"We need to give the transform being published a timestamp, and we'll just"
" stamp it with the current time by calling ``this->get_clock()->now()``. "
"This will return the current time used by the ``Node``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:176
msgid ""
"Then we need to set the name of the parent frame of the link we're "
"creating, in this case ``world``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:178
msgid ""
"Finally, we need to set the name of the child node of the link we're "
"creating, in this case this is the name of the turtle itself."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:180
msgid ""
"The handler function for the turtle pose message broadcasts this turtle's"
" translation and rotation, and publishes it as a transform from frame "
"``world`` to frame ``turtleX``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:192
msgid ""
"Here we copy the information from the 3D turtle pose into the 3D "
"transform."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:212
msgid ""
"Finally we take the transform that we constructed and pass it to the "
"``sendTransform`` method of the ``TransformBroadcaster`` that will take "
"care of broadcasting."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:220
msgid "1.2 CMakeLists.txt"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:222
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:307
msgid ""
"Navigate one level back to the ``learning_tf2_cpp`` directory, where the "
"``CMakeLists.txt`` and ``package.xml`` files are located."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:224
msgid ""
"Now open the ``CMakeLists.txt`` add the executable and name it "
"``turtle_tf2_broadcaster``, which you'll use later with ``ros2 run``."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:238
msgid ""
"Finally, add the ``install(TARGETSâ€¦)`` section so ``ros2 run`` can find "
"your executable:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:247
msgid "2 Write the launch file"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:249
msgid ""
"Now create a launch file for this demo. With your text editor, create a "
"new file called ``turtle_tf2_demo_launch.py`` in the ``launch`` folder, "
"and add the following lines:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:276
msgid "2.1 Examine the code"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:278
msgid ""
"First we import required modules from the ``launch`` and ``launch_ros`` "
"packages. It should be noted that ``launch`` is a generic launching "
"framework (not ROS 2 specific) and ``launch_ros`` has ROS 2 specific "
"things, like nodes that we import here."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:286
msgid ""
"Now we run our nodes that start the turtlesim simulation and broadcast "
"``turtle1`` state to the tf2 using our ``turtle_tf2_broadcaster`` node."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:305
msgid "2.2 Add dependencies"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:309
msgid ""
"Open ``package.xml`` with your text editor. Add the following "
"dependencies corresponding to your launch file's import statements:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:317
msgid ""
"This declares the additional required ``launch`` and ``launch_ros`` "
"dependencies when its code is executed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:319
msgid "Make sure to save the file."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:322
msgid "2.3 CMakeLists.txt"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:324
msgid ""
"Reopen ``CMakeLists.txt`` and add the line so that the launch files from "
"the ``launch/`` folder would be installed."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:331
msgid ""
"You can learn more about creating launch files in :doc:`this tutorial "
"<../Launch/Creating-Launch-Files>`."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:334
msgid "3 Build"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:336
msgid ""
"Run ``rosdep`` in the root of your workspace to check for missing "
"dependencies."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:348
#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:352
msgid ""
"rosdep only runs on Linux, so you will need to install ``geometry_msgs`` "
"and ``turtlesim`` dependencies yourself"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:354
msgid "From the root of your workspace, build your updated package:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:376
msgid ""
"Open a new terminal, navigate to the root of your workspace, and source "
"the setup files:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:403
msgid "4 Run"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:405
msgid ""
"Now run the launch file that will start the turtlesim simulation node and"
" ``turtle_tf2_broadcaster`` node:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:411
msgid "In the second terminal window type the following command:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:417
msgid ""
"You will now see that the turtlesim simulation have started with one "
"turtle that you can control."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:421
msgid ""
"Now, use the ``tf2_echo`` tool to check if the turtle pose is actually "
"getting broadcast to tf2:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:427
msgid ""
"This should show you the pose of the first turtle. Drive around the "
"turtle using the arrow keys (make sure your ``turtle_teleop_key`` "
"terminal window is active, not your simulator window). In your console "
"output you will see something similar to this:"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:446
msgid ""
"If you run ``tf2_echo`` for the transform between the ``world`` and "
"``turtle2``, you should not see a transform, because the second turtle is"
" not there yet. However, as soon as we add the second turtle in the next "
"tutorial, the pose of ``turtle2`` will be broadcast to tf2."
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:450
msgid "Summary"
msgstr ""

#: ../../source/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp.rst:452
msgid ""
"In this tutorial you learned how to broadcast the pose of the robot "
"(position and orientation of the turtle) to tf2 and how to use the "
"``tf2_echo`` tool. To actually use the transforms broadcasted to tf2, you"
" should move on to the next tutorial about creating a :doc:`tf2 listener "
"<./Writing-A-Tf2-Listener-Cpp>`."
msgstr ""

